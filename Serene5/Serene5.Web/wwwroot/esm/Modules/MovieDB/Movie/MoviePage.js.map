{
  "version": 3,
  "sources": ["../../../../../Modules/MovieDB/Movie/MoviePage.ts", "../../../../../Modules/MovieDB/Movie/MovieGrid.ts", "../../../../../Modules/MovieDB/Movie/MovieDialog.ts"],
  "sourcesContent": ["\uFEFFimport { gridPageInit } from '@serenity-is/corelib';\r\nimport { MovieGrid } from './MovieGrid';\r\n\r\nexport default () => gridPageInit(MovieGrid);", "import { MovieColumns, MovieRow, MovieService } from '@/ServerTypes/MovieDB';\r\nimport { Decorators, EntityGrid, first, localText, LookupEditor, QuickSearchField } from '@serenity-is/corelib';\r\nimport { MovieDialog } from './MovieDialog';\nimport { MovieListRequest } from '@/ServerTypes/MovieDB/MovieListRequest';\r\n@Decorators.registerClass('Serene5.MovieDB.MovieGrid')\n\n\n\r\nexport class MovieGrid extends EntityGrid<MovieRow> {\n    protected getQuickSearchFields(): QuickSearchField[] {\r\n        const txt = s => localText(`Db.${MovieRow.localTextPrefix}.${s}`);\r\n        const fld = MovieRow.Fields;\r\n        return [\r\n            { name: \"\", title: \"All\" },\r\n            { name: fld.Description, title: txt(fld.Description) },\r\n            { name: fld.Storyline, title: txt(fld.Storyline) },\r\n            { name: fld.Year, title: txt(fld.Year) }\n\r\n        ];\n\n\n    }\n    protected getQuickFilters() {\r\n        let items = super.getQuickFilters();\r\n\r\n        const genreListFilter = first(items, x =>\r\n            x.field == MovieRow.Fields.GenreList);\r\n\r\n        genreListFilter.handler = h => {\r\n            const request = (h.request as MovieListRequest);\r\n            const values = (h.widget as LookupEditor).values;\r\n            request.Genres = values.map(x => parseInt(x, 10));\r\n            h.handled = true;\r\n        };\r\n\r\n        return items;\r\n    }\r\n    protected getColumnsKey() { return MovieColumns.columnsKey; }\r\n    protected getDialogType() { return MovieDialog; }\r\n    protected getRowDefinition() { return MovieRow; }\r\n    protected getService() { return MovieService.baseUrl; }\r\n}", "import { MovieForm, MovieRow, MovieService } from '@/ServerTypes/MovieDB';\r\nimport { Decorators, EntityDialog, ToolButton } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('Serene5.MovieDB.MovieDialog')\nexport class MovieDialog extends EntityDialog<MovieRow, any> {\n    protected getFormKey() { return MovieForm.formKey; }\n    protected getRowDefinition() { return MovieRow; }\n    protected getService() { return MovieService.baseUrl; }\n\n    protected form = new MovieForm(this.idPrefix);\n\n\n    constructor() {\n        super()\n        this.form.Kind.changeSelect2(e =>{\n\n            ['Title', 'Description', 'Storyline' , 'Year' , 'ReleaseDate' , 'Runtime' ,].forEach(field => {\r\n                this.form[field].value = '';\r\n            });\n\n            this.form.GenreList.value = \"\"\n\n\n\n\n\r\n        })\r\n    }\n    \n    protected getToolbarButtons(): ToolButton[] {\n        let buttons = super.getToolbarButtons();\n        buttons.push({\n            title: 'Temizle',\n            icon: \"fa-light  fa-ban \",\n            cssClass: 'updateOfferButton',\n            separator: 'left',\n            onClick: () => {\n                ['Title', 'Description', 'Storyline', 'Year', 'ReleaseDate', 'Runtime', 'Kind'].forEach(field => {\r\n                    this.form[field].value = '';\r\n                });\n\n                this.form.GenreList.value = \"\"\n            }\n        });\n        return buttons\n    }\n\n\n}"],
  "mappings": "wJAAC,IAAAA,EAA6B,SCC9B,IAAAC,EAAyF,SCAzF,IAAAC,EAAqD,SAG9C,IAAMC,EAAN,cAA0B,cAA4B,CAQzD,aAAc,CACV,MAAM,EAJV,KAAU,KAAO,IAAIC,EAAU,KAAK,QAAQ,EAKxC,KAAK,KAAK,KAAK,cAAc,GAAI,CAE7B,CAAC,QAAS,cAAe,YAAc,OAAS,cAAgB,SAAW,EAAE,QAAQC,GAAS,CAC1F,KAAK,KAAKA,CAAK,EAAE,MAAQ,EAC7B,CAAC,EAED,KAAK,KAAK,UAAU,MAAQ,EAMhC,CAAC,CACL,CAtBU,YAAa,CAAE,OAAOD,EAAU,OAAS,CACzC,kBAAmB,CAAE,OAAOE,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAsB5C,mBAAkC,CACxC,IAAIC,EAAU,MAAM,kBAAkB,EACtC,OAAAA,EAAQ,KAAK,CACT,MAAO,UACP,KAAM,oBACN,SAAU,oBACV,UAAW,OACX,QAAS,IAAM,CACX,CAAC,QAAS,cAAe,YAAa,OAAQ,cAAe,UAAW,MAAM,EAAE,QAAQH,GAAS,CAC7F,KAAK,KAAKA,CAAK,EAAE,MAAQ,EAC7B,CAAC,EAED,KAAK,KAAK,UAAU,MAAQ,EAChC,CACJ,CAAC,EACMG,CACX,CAGJ,EA5C6DC,EAAAN,EAAA,eAAhDA,EAANO,EAAA,CADN,aAAW,cAAc,6BAA6B,GAC1CP,GDIN,IAAMQ,EAAN,cAAwB,YAAqB,CACtC,sBAA2C,CACjD,IAAMC,EAAMC,EAAAC,MAAK,aAAU,MAAMC,EAAS,eAAe,IAAID,CAAC,EAAE,EAApD,OACNE,EAAMD,EAAS,OACrB,MAAO,CACH,CAAE,KAAM,GAAI,MAAO,KAAM,EACzB,CAAE,KAAMC,EAAI,YAAa,MAAOJ,EAAII,EAAI,WAAW,CAAE,EACrD,CAAE,KAAMA,EAAI,UAAW,MAAOJ,EAAII,EAAI,SAAS,CAAE,EACjD,CAAE,KAAMA,EAAI,KAAM,MAAOJ,EAAII,EAAI,IAAI,CAAE,CAE3C,CAGJ,CACU,iBAAkB,CACxB,IAAIC,EAAQ,MAAM,gBAAgB,EAE5BC,KAAkB,SAAMD,EAAOE,GACjCA,EAAE,OAASJ,EAAS,OAAO,SAAS,EAExC,OAAAG,EAAgB,QAAUE,GAAK,CAC3B,IAAMC,EAAWD,EAAE,QACbE,EAAUF,EAAE,OAAwB,OAC1CC,EAAQ,OAASC,EAAO,IAAIH,GAAK,SAASA,EAAG,EAAE,CAAC,EAChDC,EAAE,QAAU,EAChB,EAEOH,CACX,CACU,eAAgB,CAAE,OAAOM,EAAa,UAAY,CAClD,eAAgB,CAAE,OAAOC,CAAa,CACtC,kBAAmB,CAAE,OAAOT,CAAU,CACtC,YAAa,CAAE,OAAOU,EAAa,OAAS,CAC1D,EAjCoDZ,EAAAF,EAAA,aAAvCA,EAANe,EAAA,CAJN,aAAW,cAAc,2BAA2B,GAIxCf,GDLb,IAAOgB,EAAQC,EAAA,OAAM,gBAAaC,CAAS,EAA5B",
  "names": ["import_corelib", "import_corelib", "import_corelib", "MovieDialog", "MovieForm", "field", "MovieRow", "MovieService", "buttons", "__name", "__decorateClass", "MovieGrid", "txt", "__name", "s", "MovieRow", "fld", "items", "genreListFilter", "x", "h", "request", "values", "MovieColumns", "MovieDialog", "MovieService", "__decorateClass", "MoviePage_default", "__name", "MovieGrid"]
}
